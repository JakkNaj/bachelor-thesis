/**
 * Generated by orval v7.8.0 üç∫
 * Do not edit manually.
 * Travel Planner API
 * API documentation for the Travel Planner application
 * OpenAPI spec version: 1.0.0
 */
import type { AxiosRequestConfig, AxiosResponse } from 'axios';
import axios from 'axios';

import type {
	Activity,
	ActivityInput,
	AuthResponse,
	Error,
	PostApiAuthLoginBody,
	PostApiAuthSignupBody,
	PutApiActivitiesIdBody,
	PutApiTripsIdBody,
	Trip,
	TripInput,
	UserResponse,
} from './schemas';

/**
 * @summary Add an activity to a trip
 */
export const postApiActivitiesTripTripId = <TData = AxiosResponse<Activity>>(
	tripId: number,
	activityInput: ActivityInput,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.post(`/api/activities/trip/${tripId}`, activityInput, options);
};

/**
 * @summary Update an activity
 */
export const putApiActivitiesId = <TData = AxiosResponse<Activity>>(
	id: number,
	putApiActivitiesIdBody: PutApiActivitiesIdBody,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.put(`/api/activities/${id}`, putApiActivitiesIdBody, options);
};

/**
 * @summary Delete an activity
 */
export const deleteApiActivitiesId = <TData = AxiosResponse<void>>(
	id: number,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.delete(`/api/activities/${id}`, options);
};

/**
 * @summary Login a user
 */
export const postApiAuthLogin = <TData = AxiosResponse<AuthResponse>>(
	postApiAuthLoginBody: PostApiAuthLoginBody,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.post(`/api/auth/login`, postApiAuthLoginBody, options);
};

/**
 * @summary Register a new user
 */
export const postApiAuthSignup = <TData = AxiosResponse<AuthResponse>>(
	postApiAuthSignupBody: PostApiAuthSignupBody,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.post(`/api/auth/signup`, postApiAuthSignupBody, options);
};

/**
 * @summary Logout a user
 */
export const postApiAuthLogout = <TData = AxiosResponse<Error>>(
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.post(`/api/auth/logout`, undefined, options);
};

/**
 * @summary Get all trips for the authenticated user
 */
export const getApiTrips = <TData = AxiosResponse<Trip[]>>(
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.get(`/api/trips`, options);
};

/**
 * @summary Create a new trip
 */
export const postApiTrips = <TData = AxiosResponse<Trip>>(
	tripInput: TripInput,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.post(`/api/trips`, tripInput, options);
};

/**
 * @summary Get a trip by ID
 */
export const getApiTripsId = <TData = AxiosResponse<Trip>>(
	id: number,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.get(`/api/trips/${id}`, options);
};

/**
 * @summary Update a trip
 */
export const putApiTripsId = <TData = AxiosResponse<Trip>>(
	id: number,
	putApiTripsIdBody: PutApiTripsIdBody,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.put(`/api/trips/${id}`, putApiTripsIdBody, options);
};

/**
 * @summary Delete a trip
 */
export const deleteApiTripsId = <TData = AxiosResponse<void>>(
	id: number,
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.delete(`/api/trips/${id}`, options);
};

/**
 * @summary Get user profile
 */
export const getApiUsersProfile = <TData = AxiosResponse<UserResponse>>(
	options?: AxiosRequestConfig
): Promise<TData> => {
	return axios.get(`/api/users/profile`, options);
};

export type PostApiActivitiesTripTripIdResult = AxiosResponse<Activity>;
export type PutApiActivitiesIdResult = AxiosResponse<Activity>;
export type DeleteApiActivitiesIdResult = AxiosResponse<void>;
export type PostApiAuthLoginResult = AxiosResponse<AuthResponse>;
export type PostApiAuthSignupResult = AxiosResponse<AuthResponse>;
export type PostApiAuthLogoutResult = AxiosResponse<Error>;
export type GetApiTripsResult = AxiosResponse<Trip[]>;
export type PostApiTripsResult = AxiosResponse<Trip>;
export type GetApiTripsIdResult = AxiosResponse<Trip>;
export type PutApiTripsIdResult = AxiosResponse<Trip>;
export type DeleteApiTripsIdResult = AxiosResponse<void>;
export type GetApiUsersProfileResult = AxiosResponse<UserResponse>;
